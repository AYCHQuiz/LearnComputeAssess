from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally_and_perc() %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
filter(!is.na(race_perc)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally_and_perc() %>%
mutate(race_perc = round(n/sum(n) * 100, 0)) %>%
filter(!is.na(race_perc)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally() %>%
filter(!is.na(race_perc)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
kable(race_perc, format = 'markdown', row.names = NA, col.names = c("Respondents' Racial/Ethnic Identity", "n", "%"))
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally() %>%
filter(!is.na(race_perc)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
#arrange(desc(n)) %>%
rename(Race = race_perc)
kable(race_perc, format = 'markdown', row.names = NA, col.names = c("Respondents' Racial/Ethnic Identity", "n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally_and_perc() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally_and_perc() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(NumWorkshops, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(NumWorkshops, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Data archived 2018-05-23
impactdata <- readr::read_csv("https://raw.githubusercontent.com/carpentries/assessment/master/learner-assessment/data/180523_longterm.csv")
View(impactdata)
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Respondents' Gender Identity", "n", "%"))
# Table of number of workshops that participants have attended
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(TimeSinceWorkshop, col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata, col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(TimeSinceWorkshop, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
table_of_status_by_field <- impactdata %>%
select(Status, Field:FieldOther) %>%
gather(key = "Field",
value = "value",
-Status,
na.rm = TRUE) %>%
select(-Field) %>%
table() %>%
t()
top_12_fields <- table_of_status_by_field  %>%
as_tibble() %>%
group_by(value) %>%
summarize(sum_by_field = sum(n)) %>%
arrange(desc(sum_by_field)) %>%
head(12) %>%
pull(value)
# table of participant counts in each category (multiple selection was possible)
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
spread(Status, n) %>%
kable()
# plot of the same
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field (top 12 most common) and Career Stage",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
# plot of the same
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field (top 12 most common) \nand Career Stage",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
# plot of the same
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field and Career Stage \n(top 12 most common)",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement)
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement, format = 'markdown', col.names = c("Respondents Involvement with Carpentries", "n"))
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement, format = 'markdown', col.names = c("Respondents Involvement with Carpentries", "n", "%"))
# Code for matrix of involvement (thanks Ben for the tip!)
# Combinations of tools for individual
involvement_cols <-
impactdata %>%
select(Involvement:Column57)
# Matrix tool-by-tool
m <- as.matrix(involvement_cols)
# the unique values in the matrix
vals <- sort(unique(as.vector(m)))
# rearrange the data so that each value is a column
bigm <- t(apply(m, 1, function(row) match(vals, row, nomatch=0)))
colnames(bigm) <- vals
# count the co-occurences of each value (diagonal is total number of rows with that value)
involvement_co_occurences  <- as.data.frame(crossprod(bigm>0))
kable(involvement_co_occurences,
row.names = TRUE,
caption = "Matrix of Common Involvement")
# Code chunk for continuous learning
Learning_Activities <-
impactdata %>%
select(ContinuousLearning:Column63) %>%
gather(col, Learning_Activities) %>%
group_by(Learning_Activities) %>%
tally() %>%
filter(!is.na(Learning_Activities)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Continuous Learning Post-Workshop` = Learning_Activities)
# Code chunk for table of continuous learning activities
kable(Learning_Activities,
format = "markdown",
row.names = FALSE,
col.names = c("Continuous Learning", "n", "%"),
caption = "Respondents' Continuous Learning Activities")
# Code chunk for continuous learning
Learning_Activities <-
impactdata %>%
select(ContinuousLearning:Column63) %>%
gather(col, Learning_Activities) %>%
group_by(Learning_Activities) %>%
tally() %>%
filter(!is.na(Learning_Activities)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Continuous Learning Post-Workshop` = Learning_Activities)
# Code chunk for table of continuous learning activities
kable(Learning_Activities,
format = "markdown",
row.names = FALSE,
col.names = c("Respondents' Continuous Learning Activities", "n", "%"))
# Code for matrix of continuous learning (thanks Ben for the tip!)
# Combinations of involvement for individual
learning_cols <-
impactdata %>%
select(`ContinuousLearning`:Column63)
# Matrix
m <- as.matrix(learning_cols)
# the unique values in the matrix
vals <- sort(unique(as.vector(m)))
# rearrange the data so that each value is a column
bigm <- t(apply(m, 1, function(row) match(vals, row, nomatch=0)))
colnames(bigm) <- vals
# count the co-occurences of each value (diagonal is total number of rows with that value)
learning_co_occurences  <- as.data.frame(crossprod(bigm>0))
kable(learning_co_occurences, row.names = TRUE, caption = "Matrix of Common Post-Workshop Learning Activities")
# Code chunk for whether respondents recommended a workshop
recommended <-
impactdata %>%
select(Recommended) %>%
gather(col, Recommended) %>%
group_by(Recommended) %>%
tally() %>%
filter(!is.na(Recommended)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Recommended a Workshop?` = Recommended)
# Table for responses of recommendations
kable(recommended)
# Code chunk for whether respondents recommended a workshop
recommended <-
impactdata %>%
select(Recommended) %>%
gather(col, Recommended) %>%
group_by(Recommended) %>%
tally() %>%
filter(!is.na(Recommended)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Recommended a Workshop?` = Recommended)
# Table for responses of recommendations
kable(recommended, format = 'markdown', col.names = c("Respondents who Recommended a Workshop", "n", "%"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
round2data %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field-Other", "# Respondents"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field-Other", "# Respondents"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field of Research/Work/Study: Other", "# Respondents"))
# If interested in seeing the open-ended responses for Status: Other, run this code.
impactdata_status_other_tally <-
impactdata %>%
group_by(StatusOther) %>%
tally() %>%
filter(!is.na(StatusOther))
kable(impactdata_status_other_tally, format = "markdown", row.names = FALSE, col.names = c("Status-Other", "# Respondents"))
