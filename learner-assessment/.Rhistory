<<<<<<< HEAD
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally_and_perc() %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
filter(!is.na(race_perc)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally_and_perc() %>%
mutate(race_perc = round(n/sum(n) * 100, 0)) %>%
filter(!is.na(race_perc)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally() %>%
filter(!is.na(race_perc)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(Race = race_perc)
kable(race_perc, format = 'markdown', row.names = NA, col.names = c("Respondents' Racial/Ethnic Identity", "n", "%"))
# How would you describe yourself?
# Responses are in columns 'Race' through 'Column50'
n_responses_race <-
n_responses_to_the_question(impactdata,
from_colname = Race,
to_colname = Column50)
race_perc <-
impactdata %>%
select(Race:Column50) %>%
gather(col, race_perc) %>%
group_by(race_perc) %>%
tally() %>%
filter(!is.na(race_perc)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
#arrange(desc(n)) %>%
rename(Race = race_perc)
kable(race_perc, format = 'markdown', row.names = NA, col.names = c("Respondents' Racial/Ethnic Identity", "n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally_and_perc() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally_and_perc() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
filter(!is.na(NumWorkshops)) %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(NumWorkshops, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Table of number of workshops that participants have attended
impactdata %>%
select(NumWorkshops) %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(NumWorkshops = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
kable(NumWorkshops, col.names = c("Number of Workshops Respondents Have Attended",
"n", "%"))
# Data archived 2018-05-23
impactdata <- readr::read_csv("https://raw.githubusercontent.com/carpentries/assessment/master/learner-assessment/data/180523_longterm.csv")
View(impactdata)
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Respondents' Gender Identity", "n", "%"))
# Table of number of workshops that participants have attended
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(TimeSinceWorkshop, col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata, col.names = c("Time Since Last Attending Workshop",
"n"),
caption = "Time since workshop attendence (Post-survey)")
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(TimeSinceWorkshop, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(col.names = c("Time Since Last Attending Workshop", "n",
"%"))
# Table of time since workshop attendance
impactdata %>%
filter(!is.na(TimeSinceWorkshop)) %>%
select(TimeSinceWorkshop) %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata, col.names = c("Time Since Last Attending Workshop", "n",
"%"))
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
=======
geom_text(aes(label=n), size= 4, vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Career Stage") +
ylab("% Respondents") +
ggtitle("Marjority Respondents are Graduate Students") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Table of participant counts in each category (multiple selection was possible)
>>>>>>> 34ad0dadb8e6878646bf71dcd0b7ecd5760cf5df
table_of_status_by_field <- impactdata %>%
select(Status, Field:FieldOther) %>%
gather(key = "Field",
value = "value",
-Status,
na.rm = TRUE) %>%
select(-Field) %>%
table() %>%
t()
top_12_fields <- table_of_status_by_field  %>%
as_tibble() %>%
group_by(value) %>%
summarize(sum_by_field = sum(n)) %>%
arrange(desc(sum_by_field)) %>%
head(12) %>%
pull(value)
<<<<<<< HEAD
# table of participant counts in each category (multiple selection was possible)
=======
>>>>>>> 34ad0dadb8e6878646bf71dcd0b7ecd5760cf5df
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
spread(Status, n) %>%
kable()
<<<<<<< HEAD
# plot of the same
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field (top 12 most common) and Career Stage",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
# plot of the same
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field (top 12 most common) \nand Career Stage",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
# plot of the same
=======
# Plot of participant counts in each category (multiple selection was possible)
>>>>>>> 34ad0dadb8e6878646bf71dcd0b7ecd5760cf5df
table_of_status_by_field %>%
as_tibble() %>%
filter(value %in% top_12_fields) %>%
ggplot(aes(x = Status,
y = value,
fill = n)) +
geom_tile() +
geom_text(aes(label = round(n, 0))) +
scale_fill_gradient("n",
low = "white",
high = "blue") +
labs(title = "Number of Respondants by Field and Career Stage \n(top 12 most common)",
subtitle = "Note: Multiple selections possible per person",
y = "Field",
x = "Career Stage/Status") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())
<<<<<<< HEAD
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement)
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
=======
# Number of workshops attended
impactdata_workshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
# Use the code below to include a table of the number of workshops respondents attended
kable(impactdata_workshops_tally, format = "markdown", row.names = FALSE, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
ggplot(impactdata_workshops_tally,
aes(NumWorkshops, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4, vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Number of Workshops Attended") +
ylab("% Respondents") +
ggtitle("Some respondents attend multiple workshops") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# How long ago did you attend a workshop?
impactdata_time_since_tally <-
>>>>>>> 34ad0dadb8e6878646bf71dcd0b7ecd5760cf5df
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
<<<<<<< HEAD
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement, format = 'markdown', col.names = c("Respondents Involvement with Carpentries", "n"))
# Code for involvement (rows Involvement through Column57)
# I want to use the tally_and_perc function, but don't know where to put the question_n
Carpentry_Involvement <-
impactdata %>%
select(Involvement:Column57) %>%
gather(col, Carpentry_Involvement) %>%
group_by(Carpentry_Involvement) %>%
tally() %>%
filter(!is.na(Carpentry_Involvement)) %>%
mutate(perc = round(n/sum(n) * 100, 0)) %>%
arrange(desc(n)) %>%
rename(`Involvement Since Attending a Carpentry Workshop` = Carpentry_Involvement)
kable(Carpentry_Involvement, format = 'markdown', col.names = c("Respondents Involvement with Carpentries", "n", "%"))
# Code for matrix of involvement (thanks Ben for the tip!)
# Combinations of tools for individual
involvement_cols <-
impactdata %>%
select(Involvement:Column57)
# Matrix tool-by-tool
m <- as.matrix(involvement_cols)
# the unique values in the matrix
vals <- sort(unique(as.vector(m)))
# rearrange the data so that each value is a column
bigm <- t(apply(m, 1, function(row) match(vals, row, nomatch=0)))
colnames(bigm) <- vals
# count the co-occurences of each value (diagonal is total number of rows with that value)
involvement_co_occurences  <- as.data.frame(crossprod(bigm>0))
kable(involvement_co_occurences,
row.names = TRUE,
caption = "Matrix of Common Involvement")
# Code chunk for continuous learning
Learning_Activities <-
impactdata %>%
select(ContinuousLearning:Column63) %>%
gather(col, Learning_Activities) %>%
group_by(Learning_Activities) %>%
tally() %>%
filter(!is.na(Learning_Activities)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Continuous Learning Post-Workshop` = Learning_Activities)
# Code chunk for table of continuous learning activities
kable(Learning_Activities,
format = "markdown",
row.names = FALSE,
col.names = c("Continuous Learning", "n", "%"),
caption = "Respondents' Continuous Learning Activities")
# Code chunk for continuous learning
Learning_Activities <-
impactdata %>%
select(ContinuousLearning:Column63) %>%
gather(col, Learning_Activities) %>%
group_by(Learning_Activities) %>%
tally() %>%
filter(!is.na(Learning_Activities)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Continuous Learning Post-Workshop` = Learning_Activities)
# Code chunk for table of continuous learning activities
kable(Learning_Activities,
format = "markdown",
row.names = FALSE,
col.names = c("Respondents' Continuous Learning Activities", "n", "%"))
# Code for matrix of continuous learning (thanks Ben for the tip!)
# Combinations of involvement for individual
learning_cols <-
impactdata %>%
select(`ContinuousLearning`:Column63)
# Matrix
m <- as.matrix(learning_cols)
# the unique values in the matrix
vals <- sort(unique(as.vector(m)))
# rearrange the data so that each value is a column
bigm <- t(apply(m, 1, function(row) match(vals, row, nomatch=0)))
colnames(bigm) <- vals
# count the co-occurences of each value (diagonal is total number of rows with that value)
learning_co_occurences  <- as.data.frame(crossprod(bigm>0))
kable(learning_co_occurences, row.names = TRUE, caption = "Matrix of Common Post-Workshop Learning Activities")
# Code chunk for whether respondents recommended a workshop
recommended <-
impactdata %>%
select(Recommended) %>%
gather(col, Recommended) %>%
group_by(Recommended) %>%
tally() %>%
filter(!is.na(Recommended)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Recommended a Workshop?` = Recommended)
# Table for responses of recommendations
kable(recommended)
# Code chunk for whether respondents recommended a workshop
recommended <-
impactdata %>%
select(Recommended) %>%
gather(col, Recommended) %>%
group_by(Recommended) %>%
tally() %>%
filter(!is.na(Recommended)) %>%
mutate(`%` =round(n / sum(n) * 100, 0) ) %>%
arrange(desc(n)) %>%
rename(`Recommended a Workshop?` = Recommended)
# Table for responses of recommendations
kable(recommended, format = 'markdown', col.names = c("Respondents who Recommended a Workshop", "n", "%"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
round2data %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field-Other", "# Respondents"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field-Other", "# Respondents"))
# If interested in seeing the open-ended responses for Position: Other, run this code.
impactdata_field_other_tally <-
impactdata %>%
group_by(FieldOther) %>%
tally() %>%
filter(!is.na(`FieldOther`))
kable(impactdata_field_other_tally, format = "markdown", row.names = FALSE, col.names = c("Field of Research/Work/Study: Other", "# Respondents"))
# If interested in seeing the open-ended responses for Status: Other, run this code.
impactdata_status_other_tally <-
impactdata %>%
group_by(StatusOther) %>%
tally() %>%
filter(!is.na(StatusOther))
kable(impactdata_status_other_tally, format = "markdown", row.names = FALSE, col.names = c("Status-Other", "# Respondents"))
=======
# Use the code below to include a table of how long ago respondents attended a workshop
kable(impactdata_time_since_tally, format = "markdown", row.names = FALSE, col.names = c("Time Since Completing a Workshop", "n", "%"))
ggplot(impactdata_time_since_tally,
aes(TimeSinceWorkshop, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4 , vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Time Since Attending Carpentry Workshop") +
ylab("% Respondents") +
ggtitle("Majority Respondents Attended a Workshop One Year Ago") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Last Carpentries workshop attended
workshop_attended = c("Data Carpentry", "Library Carpentry", "Software Carpentry", "I don't know.")
workshop_attended = factor(workshop_attended)
impactdata$WhichCarpentry = factor(impactdata$WhichCarpentry, levels = workshop_attended)
impactdata_workshop_attended_tally <-
impactdata %>%
group_by(WhichCarpentry) %>%
tally() %>%
filter(!is.na(WhichCarpentry)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_workshop_attended_tally,format = "markdown", row.names = FALSE, col.names = c("Workshop Respondents Attended", "n", "%"))
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming)) %>%
ggplot(aes(x = ProgrammingSince, y = 100 * (n/sum(n)))) +
geom_bar(stat = "identity", position = "dodge", fill = "darkcyan", na.rm = TRUE ) +
geom_text(aes(label=n), size= 4, vjust=-0.25) + # Adds count to top of bar
scale_x_discrete(labels = function(x) lapply(strwrap(x,
width = 10,
simplify = FALSE),
paste,
collapse = "\n")) +
theme_classic() +
xlab("Timeframe") +
ylab("% respondents") +
ggtitle("Respondents Programming Usage Since Attending a Workshop") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming)) %>%
ggplot(aes(x = ProgrammingSince, y = 100 * (n/sum(n)))) +
geom_bar(stat = "identity", position = "dodge", fill = "darkcyan", na.rm = TRUE ) +
geom_text(aes(label=n), size= 4, vjust=-0.25) + # Adds count to top of bar
scale_x_discrete(labels = function(x) lapply(strwrap(x,
width = 10,
simplify = FALSE),
paste,
collapse = "\n")) +
theme_classic() +
xlab("Timeframe") +
ylab("% respondents") +
ggtitle("Respondents Programming Usage Since Attending a Workshop") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# The code below is for post-workshop programming usage (count)
# Programming Usage Post-Carpentry Workshop [Absolute Plot]
programming = c("I have not been using tools like these.", "Less than once per year.", "Several times per year.", "Monthly.", "Weekly.", "Daily.")
programming = factor(programming)
impactdata$ProgrammingSince = factor(impactdata$ProgrammingSince, levels = programming)
impactdata_usage_tally <-
impactdata %>%
group_by(ProgrammingSince) %>%
tally() %>%
mutate(`%` = round(n / sum(n) * 100, 1)) %>%
filter(!is.na(ProgrammingSince))
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming)) %>%
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming))
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming))
ggplot(aes(x = ProgrammingSince, y = 100 * (n/sum(n)))) +
geom_bar(stat = "identity", position = "dodge", fill = "darkcyan", na.rm = TRUE ) +
geom_text(aes(label=n), size= 4, vjust=-0.25) + # Adds count to top of bar
scale_x_discrete(labels = function(x) lapply(strwrap(x,
width = 10,
simplify = FALSE),
paste,
collapse = "\n")) +
theme_classic() +
xlab("Timeframe") +
ylab("% respondents") +
ggtitle("Respondents Programming Usage Since Attending a Workshop") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# The code below is for post-workshop programming usage as a percent
impactdata %>%
select(ProgrammingSince) %>%
group_by(ProgrammingSince) %>%
tally() %>%
filter(!is.na(ProgrammingSince)) %>%
mutate(ProgrammingSince = factor(ProgrammingSince, levels = programming)) %>%
ggplot(aes(x = ProgrammingSince, y = 100 * (n/sum(n)))) +
geom_bar(stat = "identity", position = "dodge", fill = "darkcyan", na.rm = TRUE ) +
geom_text(aes(label=n), size= 4, vjust=-0.25) + # Adds count to top of bar
scale_x_discrete(labels = function(x) lapply(strwrap(x,
width = 10,
simplify = FALSE),
paste,
collapse = "\n")) +
theme_classic() +
xlab("Timeframe") +
ylab("% respondents") +
ggtitle("Respondents Programming Usage Since Attending a Workshop") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# The code below is for Pre/Post plots of programming usage
# It includes tips from Ben and Naupaka
# Make the unique values the same
impactdata$ProgrammingBefore <-
gsub("I had not been using tools like these.",
"I have not been using tools like these.",
impactdata$ProgrammingBefore)
impactdata$ProgrammingBefore <-
factor(impactdata$ProgrammingBefore,
levels = programming)
pre_and_post_usage <-
impactdata %>%
select(ProgrammingBefore,
ProgrammingSince) %>%
gather() %>%
group_by(key, value) %>%
tally() %>%
mutate( perc = 100 * (n/sum(n))) %>%
filter(!is.na(key),
!is.na(value))
ggplot(pre_and_post_usage,
aes(x = factor(value,
levels = programming),
y = perc,
fill = key)) +
geom_bar(stat = "identity",
position = "dodge") +
geom_text(aes(label=n), size= 4, vjust=-0.25, position = position_dodge(width = 1)) +
scale_x_discrete(labels = function(x) lapply(strwrap(x,
width = 10,
simplify = FALSE),
paste,
collapse = "\n")) +
theme_classic() +
xlab("Timeframe") +
ylab("% Respondents") +
scale_fill_discrete(name = "",
labels = c("Before Workshop", "After Workshop")) +
ggtitle("Pre/Post Workshop Comparison of Programming Usage") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
status <- unique(impactdata$Status)
status <- factor(status[!is.na(status)])
# Code chunk for contributions to academic writing
# how many responded to this question?
rowsums <-
impactdata %>%
select(Writing) %>%
# check that each row has a value for at least one col
# convert to numeric, if NA, then put a zero, otherwise 1
map_df(., ~ifelse(is.na(.x), 0, 1)) %>%
# sum to see if any rows have no reponses
rowSums()
# for all writing responses
idx <- ifelse(rowsums == 0, FALSE, TRUE)
n_responsed_to_writing <-  sum(idx)
# table about writing
impactdata %>%
tally_and_perc(Writing,
na.rm = TRUE,
question_n = n_responsed_to_writing) %>%
kable(,format = 'markdown', row.names = NA, col.names = c("Have Tools Contributed to Respondents' Writing?", "n", "%"))
writing = c("No.", "Not sure.", "Yes.")
writing = factor(writing)
impactdata$Writing = factor(impactdata$Writing, levels = writing)
Contributed_Writing <- round(prop.table(table(impactdata$Writing)) * 100)
# Data are in columns 'How-Tools-Learned-Help' through 'Column37'
# how many responses do we have to this question?
n_reponses_tools_learned_help <-
n_responses_to_the_question(impactdata,
from_colname = HowToolsHelped,
to_colname = Column37)
# How many responded to either of these?
# They are improving my overall efficienct : How.Tools.Learned.Helped
# They are improving my ability to analyze data. : Column34
# They are improving my ability to manage data. : Column35
relevant_cols <- c("HowToolsHelped", "Column34", "Column35")
rowsums <-
impactdata %>%
select(one_of(relevant_cols)) %>%
# check that each row has a value for at least one col
# convert to numeric, if NA, then put a zero, otherwise 1
map_df(., ~ifelse(is.na(.x), 0, 1)) %>%
# sum to see if any rows have no reponses
rowSums()
idx <- ifelse(rowsums == 0, FALSE, TRUE)
number_that_tools_helped <- sum(idx)
how_help <-
impactdata %>%
select(HowToolsHelped:Column37) %>%
gather(col, how_help) %>%
group_by(how_help) %>%
tally() %>%
filter(!is.na(how_help)) %>%
arrange(desc(n)) %>%
rename(`HowToolsHelped` = how_help)
tools_helped <-
impactdata %>%
select(HowToolsHelped:Column37) %>%
gather(col, tools_helped) %>%
group_by(tools_helped) %>%
tally_and_perc(tools_helped, na.rm = TRUE, question_n = n_reponses_tools_learned_help) %>%
filter(!is.na(tools_helped)) %>%
arrange(desc(n)) %>%
rename(`How Tools Covered Have Helped` = tools_helped)
kable(tools_helped, format = "markdown", row.names = FALSE, col.names = c("How Tools Covered Help Respondents", "n", "%"))
# Table of number of workshops that participants have attended
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Number of workshops attended
impactdata_workshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
# Use the code below to include a table of the number of workshops respondents attended
# kable(impactdata_workshops_tally, format = "markdown", row.names = FALSE, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Number of workshops attended
impactdata_workshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
# Use the code below to include a table of the number of workshops respondents attended
# kable(impactdata_workshops_tally, format = "markdown", row.names = FALSE, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
ggplot(impactdata_workshops_tally,
aes(NumWorkshops, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4, vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Number of Workshops Attended") +
ylab("% Respondents") +
ggtitle("Some respondents attend multiple workshops") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Table of number of workshops that participants have attended
numworkshops = c("1", "2", "3+")
numworkshops = factor(numworkshops)
impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
impactdata_numworkshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Number of workshops attended
impactdata_workshops_tally <-
impactdata %>%
group_by(NumWorkshops) %>%
tally() %>%
filter(!is.na(NumWorkshops)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
# Use the code below to include a table of the number of workshops respondents attended
# kable(impactdata_workshops_tally, format = "markdown", row.names = FALSE, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
ggplot(impactdata_workshops_tally,
aes(NumWorkshops, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4, vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Number of Workshops Attended") +
ylab("% Respondents") +
ggtitle("Some respondents attend multiple workshops") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Table of number of workshops that participants have attended
# numworkshops = c("1", "2", "3+")
# numworkshops = factor(numworkshops)
#
# impactdata$NumWorkshops = factor(impactdata$NumWorkshops, levels = numworkshops)
#
# impactdata_numworkshops_tally <-
#  impactdata %>%
#   group_by(NumWorkshops) %>%
#   tally() %>%
#   filter(!is.na(NumWorkshops)) %>%
#   mutate(perc = round(n/sum(n) * 100, 0))
#
# kable(impactdata_numworkshops_tally, format = 'markdown', row.names = NA, col.names = c("Number of Workshops Respondents Attended", "n", "%"))
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
# Is this your first time completing this survey?
first_time = c("Yes", "No", "I don't know.")
first_time = factor(first_time)
impactdata$FirstSurvey = factor(impactdata$FirstSurvey, levels = first_time)
impactdata_firsttime_tally <-
impactdata %>%
group_by(FirstSurvey) %>%
tally() %>%
filter(!is.na(FirstSurvey)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_firsttime_tally, format = 'markdown', row.names = NA, col.names = c ("Learners Taking Survey for First Time", "n", "%"))
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
ggplot(impactdata_time_since_tally,
aes(TimeSinceWorkshop, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4 , vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Time Since Attending Carpentry Workshop") +
ylab("% Respondents") +
ggtitle("Majority Respondents Attended a Workshop One Year Ago") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Table of time since workshop attendance
timesinceworkshop = c("0-6 months ago", "6 months - 1 year ago", "More than 1 year ago")
timesinceworkshop = factor(timesinceworkshop)
impactdata$TimeSinceWorkshop = factor(impactdata$TimeSinceWorkshop, levels = timesinceworkshop)
impactdata_timesinceworkshop_tally <-
impactdata %>%
group_by(TimeSinceWorkshop) %>%
tally() %>%
filter(!is.na(TimeSinceWorkshop)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_timesinceworkshop_tally, format = 'markdown', row.names = NA, col.names = c("Time Since Attending a Workshop", "n", "%"))
ggplot(impactdata_time_since_tally,
aes(TimeSinceWorkshop, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4 , vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Time Since Attending Carpentry Workshop") +
ylab("% Respondents") +
ggtitle("Majority Respondents Attended a Workshop One Year Ago") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
ggplot(impactdata_time_since_tally,
aes(TimeSinceWorkshop, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4 , vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Time Since Attending Carpentry Workshop") +
ylab("% Respondents") +
ggtitle("Majority Respondents Attended a Workshop One Year Ago") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
# Last Carpentries workshop attended
workshop_attended = c("Data Carpentry", "Library Carpentry", "Software Carpentry", "I don't know.")
workshop_attended = factor(workshop_attended)
impactdata$WhichCarpentry = factor(impactdata$WhichCarpentry, levels = workshop_attended)
impactdata_workshop_attended_tally <-
impactdata %>%
group_by(WhichCarpentry) %>%
tally() %>%
filter(!is.na(WhichCarpentry)) %>%
mutate(perc = round(n/sum(n) * 100, 0))
kable(impactdata_workshop_attended_tally,format = "markdown", row.names = FALSE, col.names = c("Workshop Respondents Attended", "n", "%"))
ggplot(impactdata_timesinceworkshop_tally,
aes(TimeSinceWorkshop, y = 100 * (n/sum(n)),
n)) +
geom_bar(stat = "identity", fill="darkcyan") +
geom_text(aes(label=n), size= 4 , vjust=-0.25) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("Time Since Attending Carpentry Workshop") +
ylab("% Respondents") +
ggtitle("Majority Respondents Attended a Workshop One Year Ago") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
warnings()
View(impactdata_timesinceworkshop_tally)
>>>>>>> 34ad0dadb8e6878646bf71dcd0b7ecd5760cf5df
